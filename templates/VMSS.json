{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vmSku": {
        "type": "string",
        "defaultValue": "Standard_D1_v2",
        "metadata": {
          "description": "Size of VMs in the VM Scale Set."
        }
      },
      "scriptUri": {
        "type": "string",
        "metadata": {
          "description": "Uri for init script file."
        }
      },
      "vmssName": {
        "type": "string",
        "metadata": {
          "description": "String used as a base for naming resources (9 characters or less). A hash is prepended to this string for some resources, and resource-specific information is appended."
        },
        "maxLength": 9
      },
      "instanceCount": {
        "type": "int",
        "metadata": {
          "description": "Number of VM instances (100 or less)."
        },
        "maxValue": 100
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username on all VMs."
        }
      },
      "sshPublicKey": {
        "type": "string",
        "metadata": {
          "description": "Configure the linux machines with the SSH public key string.  Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
        }
      },
      "clientRootCertData": {
        "type": "string",
        "metadata": {
          "description": "Client root CA cert data"
        }
      },
      "storageAccountName": {
        "type": "string",
        "metadata": {
          "description": "Storage account name for Azure file share."
        }
      },
      "storageAccountKey": {
        "type": "string",
        "metadata": {
          "description": "Storage account key for Azure file share."
        }
      },
      "shareName": {
        "type": "string",
        "metadata": {
          "description": "Azure file share name."
        }
      },
      "mountpointPath": {
        "type": "string",
        "defaultValue": "/mnt/fpwp",
        "metadata": {
          "description": "Path on VM to mount file share - will also link to user home dir."
        }
      },
      "dbadmin": {
        "type": "String"
      },
      "dbadminPassword": {
          "type": "String"
      },
      "location": {
          "type": "String"
      },
      "dbserverName": {
          "type": "String"
      },
      "skuCapacity": {
          "defaultValue": 4,
          "type": "Int"
      },
      "skuFamily": {
          "defaultValue": "Gen5",
          "type": "String"
      },
      "skuName": {
          "defaultValue": "GP_Gen5_4",
          "type": "String"
      },
      "skuSizeMB": {
          "defaultValue": 102400,
          "type": "Int"
      },
      "skuTier": {
          "defaultValue": "GeneralPurpose",
          "type": "String"
      },
      "version": {
          "defaultValue": "5.7",
          "type": "String"
      },
      "backupRetentionDays": {
          "defaultValue": 7,
          "type": "Int"
      },
      "geoRedundantBackup": {
          "defaultValue": "Disabled",
          "type": "String"
      },
      "previewFeature": {
          "defaultValue": "",
          "type": "String"
      }
    },
    "variables": {
      "location": "[resourceGroup().location]",
      "addressPrefix": "10.0.0.0/16",
      "subnetPrefix": "10.0.0.0/24",
      "vpnsubnetPrefix": "10.0.1.0/24",
      "vpnClientAddressPoolPrefix": "10.1.0.0/24",
      "virtualNetworkName": "[concat(parameters('vmssName'), 'vnet')]",
      "publicIPAddressName": "[concat(parameters('vmssName'), 'pip')]",
      "subnetName": "[concat(parameters('vmssName'), 'subnet')]",
      "loadBalancerName": "[concat(parameters('vmssName'), 'lb')]",
      "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
      "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
      "lbPoolID": "[concat(variables('lbID'), '/backendAddressPools/', variables('bePoolName'))]",
      "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
      "natPoolName": "[concat(parameters('vmssName'), 'natpool')]",
      "bePoolName": "[concat(parameters('vmssName'), 'bepool')]",
      "nicName": "[concat(parameters('vmssName'), 'nic')]",
      "ipConfigName": "[concat(parameters('vmssName'), 'ipconfig')]",
      "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
      "osType": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "16.04-LTS",
        "version": "latest"
      },
      "imageReference": "[variables('osType')]",
      "computeApiVersion": "2017-03-30",
      "networkApiVersion": "2017-04-01",
      "insightsApiVersion": "2015-04-01"
    },
    "resources": [
      {
        "type": "Microsoft.DBforMySQL/servers",
        "apiVersion": "2017-12-01-preview",
        "name": "[parameters('dbserverName')]",
        "location": "[parameters('location')]",
        "sku": {
            "name": "[parameters('skuName')]",
            "tier": "[parameters('skuTier')]",
            "capacity": "[parameters('skuCapacity')]",
            "size": "[parameters('skuSizeMB')]",
            "family": "[parameters('skuFamily')]"
        },
        "kind": "",
        "properties": {
            "version": "[parameters('version')]",
            "administratorLogin": "[parameters('dbadmin')]",
            "administratorLoginPassword": "[parameters('dbadminPassword')]",
            "sslEnforcement": "Disabled",
            "storageProfile": {
                "storageMB": "[parameters('skuSizeMB')]",
                "backupRetentionDays": "[parameters('backupRetentionDays')]",
                "geoRedundantBackup": "[parameters('geoRedundantBackup')]"
            },
            "previewFeature": "[parameters('previewFeature')]"
        }
    },
    {
        "type": "Microsoft.DBforMySQL/servers/virtualNetworkRules",
        "apiVersion": "2017-12-01",
        "name": "[concat(parameters('dbserverName'), '/fpwp')]",
        "dependsOn": [
            "[resourceId('Microsoft.DBforMySQL/servers', parameters('dbserverName'))]",
            "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
        ],
        "properties": {
            "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
            "ignoreMissingVnetServiceEndpoint": false
        }
    },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[variables('location')]",
        "apiVersion": "2018-10-01",
        "properties": {
          "addressSpace": {
            "addressPrefixes": ["[variables('addressPrefix')]"]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]",
                "serviceEndpoints": [
                  {
                    "service": "Microsoft.Sql"
                  }
                ]
              }
            },
            {
              "name": "GatewaySubnet",
              "properties": {
                "addressPrefix": "[variables('vpnsubnetPrefix')]"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[variables('location')]",
        "apiVersion": "2018-10-01",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[parameters('vmssName')]"
          }
        }
      },
      {
        "type": "Microsoft.Network/loadBalancers",
        "name": "[variables('loadBalancerName')]",
        "location": "[variables('location')]",
        "apiVersion": "2018-10-01",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "LoadBalancerFrontEnd",
              "properties": {
                "publicIPAddress": {
                  "id": "[variables('publicIPAddressID')]"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "[variables('bePoolName')]"
            }
          ],
          "loadBalancingRules": [
            {
              "name": "LBRule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('frontEndIPConfigID')]"
                },
                "backendAddressPool": {
                  "id": "[variables('lbPoolID')]"
                },
                "protocol": "Tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "[variables('lbProbeID')]"
                }
              }
            },
            {
              "name": "SLBRule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('frontEndIPConfigID')]"
                },
                "backendAddressPool": {
                  "id": "[variables('lbPoolID')]"
                },
                "protocol": "Tcp",
                "frontendPort": 443,
                "backendPort": 443,
                "enableFloatingIP": false,
                "loadDistribution": "SourceIP",
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "[variables('lbProbeID')]"
                }
              }
            }

          ],
          "probes": [
            {
              "name": "tcpProbe",
              "properties": {
                "protocol": "Tcp",
                "port": 80,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "[parameters('vmssName')]",
        "location": "[variables('location')]",
        "apiVersion": "2017-03-30",
        "dependsOn": [
          "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
          "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
        ],
        "sku": {
          "name": "[parameters('vmSku')]",
          "tier": "Standard",
          "capacity": "[parameters('instanceCount')]"
        },
        "properties": {
          "overprovision": false,
          "upgradePolicy": {
            "mode": "Manual"
          },
          "virtualMachineProfile": {
            "storageProfile": {
              "osDisk": {
                "createOption": "FromImage",
                "caching": "ReadWrite"
              },
              "imageReference": "[variables('imageReference')]"
            },
            "osProfile": {
              "computerNamePrefix": "[parameters('vmssName')]",
              "adminUsername": "[parameters('adminUsername')]",
              "linuxConfiguration": {
                "disablePasswordAuthentication": true,
                "ssh": {
                  "publicKeys": [
                    {
                      "path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
                      "keyData": "[parameters('sshPublicKey')]"
                    }
                  ]
                }
              }
            },
            "networkProfile": {
              "networkInterfaceConfigurations": [
                {
                  "name": "[variables('nicName')]",
                  "properties": {
                    "primary": true,
                    "ipConfigurations": [
                      {
                        "name": "[variables('ipConfigName')]",
                        "properties": {
                          "subnet": {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                          },
                          "loadBalancerBackendAddressPools": [
                            {
                              "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "extensionProfile": {
              "extensions": [
                {
                  "name": "filesextension",
                  "properties": {
                    "publisher": "Microsoft.Azure.Extensions",
                    "type": "CustomScript",
                    "typeHandlerVersion": "2.0",
                    "autoUpgradeMinorVersion": true,
                    "protectedSettings": {
                      "fileUris": ["[parameters('scriptUri')]"],
                      "storageAccountName": "[parameters('storageAccountName')]",
                      "storageAccountKey": "[parameters('storageAccountKey')]",
                      "commandToExecute": "[concat('bash shell.sh ', parameters('storageAccountName'), ' ', parameters('storageAccountKey'), ' ', parameters('shareName'), ' ', parameters('mountpointPath'), ' ', parameters('adminUsername'), ' ', parameters('dbserverName'), '.mysql.database.azure.com ',  parameters('dbadmin'), '@', parameters('dbserverName'), ' ',  parameters('dbadminPassword') )]"
                    }
                  }
                }

              ]
            }
          }
        }
      },
      {
        "type": "Microsoft.Insights/autoscaleSettings",
        "apiVersion": "2015-04-01",
        "name": "autoscalewad",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'))]"
        ],
        "properties": {
          "name": "autoscalewad",
          "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'))]",
          "enabled": true,
          "profiles": [
            {
              "name": "Profile1",
              "capacity": {
                "minimum": "1",
                "maximum": "4",
                "default": "2"
              },
              "rules": [
                {
                  "metricTrigger": {
                    "metricName": "Percentage CPU",
                    "metricNamespace": "",
                    "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'))]",
                    "timeGrain": "PT1M",
                    "statistic": "Average",
                    "timeWindow": "PT5M",
                    "timeAggregation": "Average",
                    "operator": "GreaterThan",
                    "threshold": 60
                  },
                  "scaleAction": {
                    "direction": "Increase",
                    "type": "ChangeCount",
                    "value": "1",
                    "cooldown": "PT1M"
                  }
                },
                {
                  "metricTrigger": {
                    "metricName": "Percentage CPU",
                    "metricNamespace": "",
                    "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'))]",
                    "timeGrain": "PT1M",
                    "statistic": "Average",
                    "timeWindow": "PT5M",
                    "timeAggregation": "Average",
                    "operator": "LessThan",
                    "threshold": 30
                  },
                  "scaleAction": {
                    "direction": "Decrease",
                    "type": "ChangeCount",
                    "value": "1",
                    "cooldown": "PT5M"
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[concat(variables('publicIPAddressName'), 'gw')]",
        "location": "[variables('location')]",
        "apiVersion": "2018-10-01",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[concat(parameters('vmssName'), 'gw')]"
          }
        }
      },
      {
          "name": "[concat(parameters('vmssName'), 'gw')]",
          "type": "Microsoft.Network/virtualNetworkGateways",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
              "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), 'gw'))]",
              "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
              "[resourceId('Microsoft.DBforMySQL/servers', parameters('dbserverName'))]"

          ],
          "properties": {
              "ipConfigurations": [
                  {
                      "name": "vnetGatewayConfig",
                      "properties": {
                          "privateIPAllocationMethod": "Dynamic",
                          "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'GatewaySubnet' )]"
                          },
                          "publicIPAddress": {
                              "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), 'gw'))]"
                          }
                      }
                  }
              ],
              "sku": {
                  "name": "VpnGw1",
                  "tier": "VpnGw1"
              },
              "gatewayType": "Vpn",
              "vpnType": "RouteBased",
              "enableBgp": "false",
              "vpnClientConfiguration": {
                "vpnClientAddressPool": {
                  "addressPrefixes": [
                    "[variables('vpnClientAddressPoolPrefix')]"
                  ]
                },
                "vpnClientRootCertificates": [
                  {
                    "name": "rootCA",
                    "properties": {
                      "PublicCertData": "[parameters('clientRootCertData')]"
                    }
                  }
                ]
              }
            }
      }
    ],
    "outputs": {
      "site-url": {
        "type": "string",
        "value": "[concat('https://', parameters('vmssName'), '.', parameters('location'), '.cloudapp.azure.com')]"
      }
    }
  }